diff --git a/imgui.cpp b/imgui.cpp
index e3c6f1a..baa116f 100644
--- a/imgui.cpp
+++ b/imgui.cpp
@@ -7704,7 +7704,7 @@ bool ImGui::InputTextEx(const char* label, char* buf, int buf_size, const ImVec2
     ImGuiWindow* draw_window = window;
     if (is_multiline)
     {
-        if (!BeginChildFrame(id, frame_bb.GetSize()))
+        if (!BeginChildFrame(id, frame_bb.GetSize(), ImGuiWindowFlags_HorizontalScrollbar))
         {
             EndChildFrame();
             EndGroup();
@@ -8133,7 +8133,7 @@ bool ImGui::InputTextEx(const char* label, char* buf, int buf_size, const ImVec2
 
             // Store text height (note that we haven't calculated text width at all, see GitHub issues #383, #1224)
             if (is_multiline)
-                text_size = ImVec2(size.x, line_count * g.FontSize);
+                text_size = InputTextCalcTextSizeW(edit_state.Text.Data, edit_state.Text.Data + edit_state.CurLenW);
         }
 
         // Scroll
@@ -8221,7 +8221,10 @@ bool ImGui::InputTextEx(const char* label, char* buf, int buf_size, const ImVec2
         // Render text only
         const char* buf_end = NULL;
         if (is_multiline)
-            text_size = ImVec2(size.x, InputTextCalcTextLenAndLineCount(buf_display, &buf_end) * g.FontSize); // We don't need width
+        {
+            buf_end = buf_display + strlen(buf_display);
+            text_size = g.Font->CalcTextSizeA(g.FontSize, FLT_MAX, 0.0f, buf_display, buf_end);
+        }
         draw_window->DrawList->AddText(g.Font, g.FontSize, render_pos, GetColorU32(ImGuiCol_Text), buf_display, buf_end, 0.0f, is_multiline ? NULL : &clip_rect);
     }
